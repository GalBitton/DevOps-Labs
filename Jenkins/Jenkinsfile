pipeline {
    agent any
    stages {
        // Stage 1: Welcome Message
        stage('Welcome Message') {
            steps {
                echo 'Welcome to the Jenkins Python Job!'
            }
        }
        // Stage 2: Verify Python
        stage('Verify Python') {
            steps {
                script {
                    // Check if Python is installed, if not, install it
                    def pythonCheck = sh(script: 'command -v python3 || command -v python', returnStatus: true)
                    if (pythonCheck != 0) {
                        echo 'Python not found. Installing Python...'
                        if (isUnix()) {
                            sh '''
                            if [ -x "$(command -v apt-get)" ]; then
                                apt-get update && apt-get install -y python3 python3-pip
                            elif [ -x "$(command -v yum)" ]; then
                                yum install -y python3 python3-pip
                            else
                                echo "Unsupported package manager. Please install Python manually."
                                exit 1
                            fi
                            '''
                        } else {
                            error 'Automatic installation not supported on Windows. Please install Python manually.'
                        }
                    } else {
                        echo 'Python is already installed.'
                    }
                }
            }
        }
        // Stage 3: Clone Repository
        stage('Clone Repository') {
            steps {
                // Add your token here, we had issues to push the jenkinsfile to the repo with the token
                // In order to run it, take the token from the attached word and replace <token>
                git branch: 'main', url: 'https://eladgl:github_pat_<token>@github.com/eladgl/MyRepoName.git'
            }
        }
        // Stage 4: Run Unit Tests
        stage('Run Unit Tests') {
            steps {
                sh 'python3 -m unittest discover -s tests || python -m unittest discover -s tests'
            }
        }
        // Stage 5: Send Email Notification
        stage('Send Email Notification') {
            steps {
                mail to: 'eladgoldenbergb@gmail.com',
                     subject: "Jenkins Job Run: ${currentBuild.fullDisplayName}",
                     body: """
                     Hello,
    
                     The Jenkins job '${currentBuild.fullDisplayName}' has completed.
    
                     Current status: ${currentBuild.result}.
                     Console output: ${env.BUILD_URL}
    
                     Thank you,
                     Jenkins
                     """
            }
        }
    }
    // Post-Build Actions
    post {
        always {
            echo 'Job Completed'
        }
    }
}
